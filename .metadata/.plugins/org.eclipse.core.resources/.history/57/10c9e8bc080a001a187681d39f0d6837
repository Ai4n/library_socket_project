package Main;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Scanner;

public class UserController {
	//Create class SocketController
	//write(ServerMessage, values)
	//read()
	//eg:
	//old: 
//	try {
//		dataOut.writeUTF(ServerMessage.ADD_USER_BOOK.getMessage());
//		dataOut.writeInt(bid);
//		dataOut.writeInt(uid);
//		dataOut.flush();
//	} catch (IOException ignored) {
//		System.out.println("No one book added!");
//	}
	
	//new:
	//socketController.write(ServerMessage.ADD_USER_BOOK, bid, uid)
	private Scanner scan = new Scanner(System.in);
	private User user;
	private SocketController socketController;
	public UserController(User user, SocketController socketController) {
		this.user = user;
		this.socketController = socketController;
	}

	public void userMenu() {
		try {
			loop: while (true) {
				System.out.println(
						"\nEnter options:\n" + "1.Add book\n" + "2.Show all books\n" + "3.Search book\n" + "4.Delete book\n" + "5.Quit\n");
				int number = scan.nextInt();
				switch (number) {
				case 1:
					addToUserBooks();
					break;
				case 2:
					showMyBooks();
					break;
				case 3:
					searchInUserBooks();
					break;
				case 4:
					deleteUserBook();
					break;
				case 5:
					return;
				default:
					System.out.println("enter 1-5");
					break loop;

				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void showMyBooks() throws ClassNotFoundException {
		ArrayList<Book> listBooks = getUserBooks();
		printBooksList(listBooks);
	}

	private void addToUserBooks() throws ClassNotFoundException {
		ArrayList<Book> listBooks = getAllBooks();
		printBooksList(listBooks);
		System.out.println("Choose number of book: \n");
		int number = scan.nextInt();
		int bid = listBooks.get(number - 1).getBookId();
		int uid = user.getIduser();
		String bookId = String.valueOf(bid);
		String userId = String.valueOf(uid);
		socketController.write(ServerMessage.ADD_USER_BOOK, bookId, userId);
	}

	private void printBooksList(ArrayList<Book> listBooks) throws ClassNotFoundException {
		Book book = null;
		if (listBooks != null) {
			for (int i = 0; i < listBooks.size(); i++) {
				book = listBooks.get(i);
				System.out.println((i + 1) + ". " + book);
			}
		}
	}

	private ArrayList<Book> getAllBooks() throws ClassNotFoundException {
		ArrayList<Book> allBooks = null;
		socketController.write(ServerMessage.GET_ALL_BOOKS);
		allBooks = (ArrayList<Book>) socketController.read();
		return allBooks;
	}

	private ArrayList<Book> getUserBooks() throws ClassNotFoundException {
		int userId = user.getIduser();
		String user = String.valueOf(userId);
		ArrayList<Book> listBooks = null;
		socketController.write(ServerMessage.SHOW_BOOKS, user);
		listBooks = socketController.read(); 
		return listBooks;
	}

	private void searchInUserBooks() throws ClassNotFoundException {
		ArrayList<Book> foundBooks;
		int idUser = user.getIduser();
		String userId = String.valueOf(idUser);
		System.out.println("Please enter search text: \n");
		String text = scan.next();
		socketController.write(ServerMessage.SEARCH_BOOKS, userId, text);
		foundBooks = (ArrayList<Book>) socketController.read();
		int count = 1;
		for (Book book : foundBooks) {
			System.out.println(count + ". " + book);
			count++;
		}		
	}
	
	private void deleteUserBook() throws ClassNotFoundException {
		ArrayList<Book> listBooks = getUserBooks();
		printBooksList(listBooks);
		System.out.println("Choose number of book: \n");
		int number = scan.nextInt();
		int bookId = listBooks.get(number - 1).getBookId();
		String book = String.valueOf(bookId);
		int userId = user.getIduser();
		String user = String.valueOf(userId);
		socketController.write(ServerMessage.DELETE_USER_BOOK, book, user);
	}
}
