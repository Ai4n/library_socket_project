package Main;

import java.util.ArrayList;
import java.util.Scanner;

public class AdminController {
	private Scanner scan = new Scanner(System.in);
	SocketController socketController;

	public AdminController(SocketController socketController) {
		this.socketController = socketController;
	}
	
	public void adminMenu() {
		loop: while (true) {
			System.out.println("\nEnter options:\n" + "1.Add book\n" + "2.Show all books\n" + "3.Search book\n"
					+ "4.Delete book\n" + "5.Update book\n" + "6.Quit\n");
			int number = scan.nextInt();
			switch (number) {
			case 1:
				addToAllBooks();
				break;
			case 2:
				showAllBooks();
				break;
			case 3:
				searchInAllBooks();
				break;
			case 4:
				deleteBook();
				break;
			case 5:
				updateBook();
				break;
			case 6:
				return;
			default:
				System.out.println("enter 1-4");
				break loop;
			}
		}

	}

	private void updateBook() {
		ArrayList<Book> listBooks = getAllBooks();
		if (listBooks.equals(null))
			return;
		printBooksList(listBooks);
		System.out.println("Please enter number of book: ");
		int number = scan.nextInt();
		Book book = listBooks.get(number - 1);
		System.out.println("Choose field to update: \n" + "1. Author\n" + "2. Title\n" + "3. Year\n" + "4. Genre\n");
		int digit = scan.nextInt();
		switch (digit) {
		case 1:
			enterAuthor(book);
			break;
		case 2:
			enterTitle(book);
			break;
		case 3:
			enterYear(book);
			break;
		case 4:
			enterGenre(book);
			break;
		default:
			System.out.println("enter 1-4");
			break;
		}
		socketController.writeObject(ServerMessage.UPDATE_BOOK, book);
	}
    private void enterAuthor (Book book) {
    	System.out.println("Enter Author's name and surname: ");
		scan.nextLine();
		String author = scan.nextLine();
		book.setAuthor(author);
    }
    
    private void enterTitle(Book book) {
    	System.out.println("Enter title of the book: ");
		String title = scan.next();
		book.setTitle(title);
    }
    
    private void enterYear(Book book) {
    	System.out.println("Enter 4 digits of year: ");
		String year = scan.next();
		book.setYear(year);
    }
    
    private void enterGenre(Book book) {
    	System.out.println("Enter genre: ");
		String genre = scan.next();
		book.setGenre(genre);
    }
    
	private void deleteBook() {
		ArrayList<Book> listBooks = getAllBooks();
		if(listBooks.equals(null)) return;
		printBooksList(listBooks);
		System.out.println("Choose number of book: \n");
		int number = scan.nextInt();
		Integer bookId = listBooks.get(number - 1).getBookId();
		socketController.writeInt(ServerMessage.DELETE_BOOK, bookId);
	}

	private void printBooksList(ArrayList<Book> listBooks) {
		Book book = null;
		if (listBooks != null) {
			for (int i = 0; i < listBooks.size(); i++) {
				book = listBooks.get(i);
				System.out.println((i + 1) + ". " + book);
			}
		}
	}

	private ArrayList<Book> getAllBooks() {
		socketController.writeMessage(ServerMessage.GET_ALL_BOOKS);
		ArrayList<Book> allBooks = socketController.read();
		if (allBooks.equals(null)) {
			return null;
		}
		return allBooks;
	}

	private void addToAllBooks() {
		System.out.println("Please enter Author:");
		scan.nextLine();
		String author = scan.nextLine();
		System.out.println("Please enter Title:");
		String title = scan.nextLine();
		System.out.println("Please enter Year:");
		String year = scan.nextLine();
		System.out.println("Please enter Genre:");
		String genre = scan.nextLine();
		Book book = new Book(author, title, year, genre);
		socketController.writeObject(ServerMessage.ADD_BOOK, book);
	}

	public void showAllBooks() {
		ArrayList<Book> allBooks;
		socketController.writeMessage(ServerMessage.GET_ALL_BOOKS);
		allBooks = socketController.read();
		int count = 1;
		if (allBooks.equals(null))
			return;
		for (Book book : (allBooks)) {
			System.out.println(count + ". " + book);
			count++;
		}
	}

	public void searchInAllBooks() {
		ArrayList<Book> foundBooks;
		System.out.println("Please enter search text: ");
		String text = scan.next();
		socketController.write(ServerMessage.SEARCH_BOOK, text);
		foundBooks = socketController.read();
		if (foundBooks.equals(null))
			return;
		int count = 1;
		for (Book book : foundBooks) {
			System.out.println(count + ". " + book);
			count++;
		}
	}
}
